# The checks used in the test are also showcased in the docs under /docs/reference/quality_rules.mdx
# The checks should be kept up to date with the docs to make sure the documentation examples are validated.

# is_unique check
- criticality: error
  check:
    function: is_unique
    arguments:
      columns:
      - col1

# is_unique on multiple columns (composite key), nulls are distinct (default behavior)
# eg. (1, NULL) not equals (1, NULL) and (NULL, NULL) not equals (NULL, NULL)
- criticality: error
  name: composite_key_col1_and_col2_is_not_unique
  check:
    function: is_unique
    arguments:
      columns:
      - col1
      - col2

# is_unique on multiple columns (composite key), nulls are not distinct
# eg. (1, NULL) equals (1, NULL) and (NULL, NULL) equals (NULL, NULL)
- criticality: error
  name: composite_key_col1_and_col2_is_not_unique_not_nulls_distinct
  check:
    function: is_unique
    arguments:
      columns:
      - col1
      - col2
      nulls_distinct: False

## is_aggr_not_greater_than check with aggregation over col2 (skip nulls)
#- criticality: error
#  check:
#    function: is_aggr_not_greater_than
#    arguments:
#      column: col2
#      aggr_type: count # other types: sum, avg, min, max
#      limit: 10
#
## is_aggr_not_greater_than check with aggregation over col2 grouped by col3 (skip nulls)
#- criticality: error
#  check:
#    function: is_aggr_not_greater_than
#    arguments:
#      column: col2
#      aggr_type: count # other types: sum, avg, min, max
#      group_by:
#      - col3
#      limit: 10
#
## is_aggr_not_less_than check with count aggregation over all rows
#- criticality: error
#  check:
#    function: is_aggr_not_less_than
#    arguments:
#      column: '*'
#      aggr_type: count
#      limit: 1
#
## is_aggr_not_less_than check with aggregation over col2 (skip nulls)
#- criticality: error
#  check:
#    function: is_aggr_not_less_than
#    arguments:
#      column: col2
#      aggr_type: count # other types: sum, avg, min, max
#      limit: 1
#
## is_aggr_not_less_than check with aggregation over col2 grouped by col3 (skip nulls)
#- criticality: error
#  check:
#    function: is_aggr_not_less_than
#    arguments:
#      column: col2
#      aggr_type: count # other types: sum, avg, min, max
#      group_by:
#      - col3
#      limit: 1

# apply check to multiple columns
- criticality: error
  check:
    function: is_unique # 'column' as first argument
    for_each_column: # apply the check for each list of columns
    - [col3, col5]
    - [col1]
